
python

# mostrar onde o python esta instalado
    -> python -m site


# python help
    -> python --help


git status
git add <nome do arquivo> (adiciona um arquivo)
git commit -m "mensagem do commit"
git branch --unset-upstream (primeira vez que comitar um arquivo, tem que executar esse comando)
git push --set-upstream origin main (envia os arquivos para o github)


git add .
git commit -m "mensagem do commit"
git push

# exporta as variaveis de ambiente para o python rodar e permite rodar o script python
# sem precisar digitar "python3 hello.py", basta digitar ./hello.py (ambiente linux) ou
# hello.py (ambiente windows)
# permite também rodar o script sem a extenção .py
# se renomear o arquivo de hello.py para hello o script será executado normal
#!/usr/bin/env python3

# mostra o usuario que esta usando o sistema
whoami

# dar permissão para o usuario rodar o script hello.py
chmod +x hello.py 


# Gerar e adionar uma chave SSH no github

# gerar chave rsa para adicionar no github
ssh-keygen.exe -t rsa -C "<endereço de e-mail, mesmo do github>"

# editar o arquivo e copiar a chave para colocar no github
cat /c/Users/ferfa/.ssh/id_rsa.pub

# remover o arquivo
rm /c/Users/ferfa/.ssh/known_hosts

# depois que adicionou a chave no github, testar
ssh -T git@github.com


# pep 8

# sobrescreve a variavel de ambiente LANG do SO e passa para o
# python executar
LANG=it_IT python hello.py


# mostra onde o python esta instalado
which.exe python

# criar ambiente virtual
# .venv é o nome da pasta que vai conter os arquivos do
# python, é uma convenção no mundo python
# o . no inicio é para indicar que a pasta é oculta
python -m venv .venv

# ativar o ambiente virtual
source .venv/Scripts/activate